networks:
  springboot-mysql-network:
    name: springboot-mysql-network
volumes:
  mysql-data:
services:
  mysqldb:
    image: mysql:8.0
    container_name: mysqldb
    ports:
      - "3307:3306"
    environment:
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
    volumes:
      - mysql-data:/var/lib/mysql
    command: --default-authentication-plugin=mysql_native_password
  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    ports:
      - "8085:80"
  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8084:8084"
    expose:
       - "8084"
    depends_on:
       - mysqldb
    environment:
      - SPRING_DATASOURCE_URL=jdbc:mysql://host.docker.internal:3307/${MYSQL_DATABASE}?createDatabaseIfNotExist=true&autoReconnect=true&useSSL=false
      - SPRING_DATASOURCE_USERNAME=${MYSQL_USER}
      - SPRING_DATASOURCE_PASSWORD=${MYSQL_PASSWORD}
    env_file: ./.env
    networks:
      - springboot-mysql-network











































#    networks:
#      - springboot-mysql-network
#  prometheus:
#    image: prom/prometheus:v2.44.0
#    container_name: prometheus
#    ports:
#      - "9090:9090"
#    volumes:
#      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
#  grafana:
#    image: grafana/grafana:9.5.2
#    container_name: grafana
#    ports:
#      - "3000:3000"
#    restart: unless-stopped
#    volumes:
#      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
#volumes:
#  mysql-data:
#networks:
#  springboot-mysql-network:
#    name: springboot-mysql-network




    #  app:
    #    build:
    #      context: .
    #      dockerfile: Dockerfile
    #    ports:
    #      - "8090:8090"
    #    expose:
    #       - "8090"
    #    depends_on:
    #       - mysqldb
    #    environment:
    #      - SPRING_DATASOURCE_URL=jdbc:mysql://mysqldb:3306/${MYSQL_DATABASE}?createDatabaseIfNotExist=true&autoReconnect=true&useSSL=false
    #      - SPRING_DATASOURCE_USERNAME=${MYSQL_USER}
    #      - SPRING_DATASOURCE_PASSWORD=${MYSQL_PASSWORD}
    #    env_file: ./.env
    #    networks:
    #      - springboot-mysql-network





